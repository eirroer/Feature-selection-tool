digraph prediction_pipeline {
    graph[rankdir=LR, bgcolor=white, margin=0, labelloc="t", fontname="sans", fontsize=14];
    node[shape=box, style=rounded, fontname="sans", fontsize=14, penwidth=2];
    edge[penwidth=2, color=grey, fontname="sans", fontsize=12];

    0[label = "run_prediction", color = "0.51 0.6 0.85"];
    1[label = "random_forest_prediction", color = "0.21 0.6 0.85"];
    2[label = "pre_filter_data", color = "0.10 0.6 0.85"];
    3[label = "read_and_split_train_test_data", color = "0.31 0.6 0.85"];
    4[label = "random_forest", color = "0.00 0.6 0.85"];
    5[label = "xgboost_prediction", color = "0.41 0.6 0.85"];
    6[label = "xgboost", color = "0.36 0.6 0.85"];

    # Final prediction dependencies
    1 -> 0 [label="RF prediction"];
    5 -> 0 [label="XGB prediction"];

    # Random forest prediction
    2 -> 1 [label="Filtered training counts"];
    3 -> 1 [label="Test count + metadata"];
    4 -> 1 [label="RF model"];

    # Pre-filtering
    3 -> 2 [label="Raw counts"];

    # RF model training
    2 -> 4 [label="Filtered training counts"];
    3 -> 4 [label="Training metadata"];

    # XGB prediction
    2 -> 5 [label="Filtered training counts"];
    3 -> 5 [label="Test counts + metadata"];
    6 -> 5 [label="XGB model"];

    # XGB model training
    2 -> 6 [label="Filtered training counts"];
    3 -> 6 [label="Training metadata"];
}          
