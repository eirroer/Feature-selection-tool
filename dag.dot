digraph colorectal_mirna_pipeline {
    graph[rankdir=LR, bgcolor=white, margin=0];
    node[shape=box, style=rounded, fontname=sans, fontsize=10, penwidth=2];
    edge[penwidth=2, color=grey];

    0[label = "all", color = "0.28 0.6 0.85"];
    1[label = "random_forest_prediction", color = "0.22 0.6 0.85"];
    2[label = "pre_filter_data", color = "0.50 0.6 0.85"];
    3[label = "read_and_split_train_test_data", color = "0.61 0.6 0.85"];  # still exists, but not connected
    4[label = "random_forest", color = "0.17 0.6 0.85"];
    5[label = "xgboost_prediction", color = "0.56 0.6 0.85"];
    6[label = "xgboost", color = "0.06 0.6 0.85"];
    7[label = "get_CV_scores", color = "0.11 0.6 0.85"];
    8[label = "plot_pca", color = "0.44 0.6 0.85"];
    9[label = "normalize_train_count_data", color = "0.00 0.6 0.85"];

    # Final aggregation
    1 -> 0 [label="RF final prediction"];
    5 -> 0 [label="XGB final prediction"];
    4 -> 0 [label="RF model"];
    6 -> 0 [label="XGB model"];
    7 -> 0 [label="CV scores"];
    8 -> 0 [label="PCA plot"];

    # RF prediction
    2 -> 1 [label="filtered counts"];
    4 -> 1 [label="trained RF model"];

    # Pre-filter input
    # (no metadata edge here)
    
    # RF model training
    2 -> 4 [label="filtered counts"];

    # XGB prediction
    2 -> 5 [label="filtered counts"];
    6 -> 5 [label="trained XGB model"];

    # XGB training
    2 -> 6 [label="filtered counts"];

    # CV scores
    4 -> 7 [label="RF model"];
    6 -> 7 [label="XGB model"];

    # PCA
    9 -> 8 [label="normalized counts"];

    # Normalization
    2 -> 9 [label="filtered counts"];
}